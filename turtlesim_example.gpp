bool fluent exog_state(){
initially:
		() = false;
}

string fluent string_response() {
initially:
	() = "";
}

action senses_string(string source) {
senses:
	string_response() = "0";
mapping:
	"/response_string" {
		source = source
	}
}

action move_theta(number angle) {
mapping:
	"/turtle1/rotate_absolute" {
		theta = angle
	}
}

action spawn_turtle(number x, number y, number theta) {
mapping:
	"/spawn" {
		x = x,
		y = y,
		theta = theta
	}
}

exog_action exog_trigger(bool data) {
mapping:
	"/exog_event" {
		data = data
	}
effect:
	exog_state() = true;
}

procedure main(){
	move_theta(1.0);
	move_theta(0.0);
	spawn_turtle(5.0, 5.0, 0.0);
	senses_string("a");
	senses_string(string_response());
}